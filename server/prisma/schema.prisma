// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}
model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  username    String?
  password String?
  role    Role     @default(USER)
  account   Transaction[]
  passwordChangedAt DateTime? @updatedAt
  passwordResetToken String?
  passwordResetExpires DateTime?
  active Boolean @default(true)
  premium Boolean @default(false)
 
}



model Transaction {
  id         String       @id @default(uuid())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title      String
  descriptions String
  amount Decimal @db.Decimal(10,2)
  
  user     User       @relation(fields: [userId], references: [id] ,onDelete:Cascade ,onUpdate: Cascade)
  userId   Int
  categories Category[]
  transactionType  Type 
}

model Category {
  id    Int    @id @default(autoincrement())
  categories Option @unique
  logo String? 
  posts Transaction[]
}
enum Type{
  credit
  debit
}

enum Role {
  USER
  ADMIN
}

enum Option{
  salary
  grocery
  shopping
  household
  medical
  travel
  entertainment
  other
}